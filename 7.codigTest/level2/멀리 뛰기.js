// 문제 설명
// 효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
// (1칸, 1칸, 1칸, 1칸)
// (1칸, 2칸, 1칸)
// (1칸, 1칸, 2칸)
// (2칸, 1칸, 1칸)
// (2칸, 2칸)
// 의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 예를 들어 4가 입력된다면, 5를 return하면 됩니다.

// 제한 사항
// n은 1 이상, 2000 이하인 정수입니다.
// 입출력 예
// n	result
// 4	5
// 3	3
// 입출력 예 설명
// 입출력 예 #1
// 위에서 설명한 내용과 같습니다.

// 입출력 예 #2
// (2칸, 1칸)
// (1칸, 2칸)
// (1칸, 1칸, 1칸)
// 총 3가지 방법으로 멀리 뛸 수 있습니다.

//다이나믹 프로그래밍 문제였다..
function solution(n = 7) {
  let answer = Array(n).fill(0);

  answer[1] = 1;
  answer[2] = 2;
  for (let i = 3; i <= n; i++) {
    answer[i] = (answer[i - 1] + answer[i - 2]) % 1234567;
  }
  return answer[n];
}

console.log(solution());

// 11 2 2
// 2

// 111 3 3
// 21
// 12

// 1111 4 5 1
// 211
// 121
// 112
// 22

// 11111 5 8 3
// 2111
// 1211
// 1121
// 1112
// 221
// 212
// 122

// 111111 6 13 7
// 21111
// 12111
// 11211
// 11121
// 11112
// 2211
// 2121
// 2112
// 1221
// 1212
// 1122
// 222

// 1111111 7 18 11
// 211111
// 121111
// 112111
// 111211
// 111121
// 111112
// 22111
// 21211
// 21121
// 21112
// 12112
// 11212
// 11122
// 2221
// 2212
// 2122
// 1222

// 11111111 8 21 13
// 2111111
// 1211111
// 1121111
// 1112111
// 1111211
// 1111121
// 1111112
// 221111
// 212111
// 211211
// 211121
// 211112
// 22211
// 22121
// 22112
// 21221
// 21122
// 12122
// 11222
// 2222
